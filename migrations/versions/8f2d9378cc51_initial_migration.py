"""Initial migration

Revision ID: 8f2d9378cc51
Revises: 
Create Date: 2025-04-02 07:12:24.274795

"""
from alembic import op
import sqlalchemy as sa
from sqlalchemy.dialects import postgresql

# revision identifiers, used by Alembic.
revision = '8f2d9378cc51'
down_revision = None
branch_labels = None
depends_on = None


def upgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_table('inventories')
    op.drop_table('inventory_movements')
    op.drop_table('inventory_items')
    op.drop_table('warehouses')
    with op.batch_alter_table('approval_logs', schema=None) as batch_op:
        batch_op.alter_column('approval_date',
               existing_type=postgresql.TIMESTAMP(),
               nullable=True)

    with op.batch_alter_table('invoices', schema=None) as batch_op:
        batch_op.alter_column('invoice_date',
               existing_type=sa.DATE(),
               nullable=True)
        batch_op.alter_column('project_name',
               existing_type=sa.VARCHAR(length=100),
               type_=sa.String(length=255),
               nullable=True)
        batch_op.alter_column('invoice_amount',
               existing_type=sa.DOUBLE_PRECISION(precision=53),
               nullable=True)
        batch_op.alter_column('approval_status',
               existing_type=sa.VARCHAR(length=20),
               nullable=True)
        batch_op.drop_constraint('fk_invoices_project', type_='foreignkey')

    with op.batch_alter_table('notifications', schema=None) as batch_op:
        batch_op.alter_column('category',
               existing_type=sa.VARCHAR(length=50),
               nullable=True)
        batch_op.alter_column('url',
               existing_type=sa.VARCHAR(length=200),
               type_=sa.String(length=255),
               existing_nullable=True)

    with op.batch_alter_table('other_transactions', schema=None) as batch_op:
        batch_op.alter_column('transaction_type',
               existing_type=sa.VARCHAR(length=100),
               type_=sa.String(length=50),
               existing_nullable=False)
        batch_op.alter_column('description',
               existing_type=sa.TEXT(),
               nullable=False)
        batch_op.alter_column('approval_status',
               existing_type=sa.VARCHAR(length=20),
               nullable=True)
        batch_op.drop_constraint('fk_other_transactions_project', type_='foreignkey')

    with op.batch_alter_table('price_quote_items', schema=None) as batch_op:
        batch_op.add_column(sa.Column('quote_id', sa.Integer(), nullable=False))
        batch_op.add_column(sa.Column('name', sa.String(length=255), nullable=False))
        batch_op.add_column(sa.Column('description', sa.Text(), nullable=True))
        batch_op.add_column(sa.Column('quantity', sa.Float(), nullable=False))
        batch_op.add_column(sa.Column('unit', sa.String(length=20), nullable=True))
        batch_op.add_column(sa.Column('unit_price', sa.Float(), nullable=False))
        batch_op.add_column(sa.Column('total_price', sa.Float(), nullable=False))
        batch_op.alter_column('request_item_id',
               existing_type=sa.INTEGER(),
               nullable=True)
        batch_op.drop_constraint('price_quote_items_price_quote_id_fkey', type_='foreignkey')
        batch_op.create_foreign_key(None, 'price_quotes', ['quote_id'], ['id'])
        batch_op.drop_column('price')
        batch_op.drop_column('price_quote_id')
        batch_op.drop_column('created_at')

    with op.batch_alter_table('price_quotes', schema=None) as batch_op:
        batch_op.add_column(sa.Column('currency', sa.String(length=5), nullable=True))
        batch_op.add_column(sa.Column('status', sa.String(length=20), nullable=True))
        batch_op.add_column(sa.Column('notes', sa.Text(), nullable=True))
        batch_op.add_column(sa.Column('created_by', sa.Integer(), nullable=False))
        batch_op.alter_column('total_price',
               existing_type=sa.DOUBLE_PRECISION(precision=53),
               nullable=False)
        batch_op.create_foreign_key(None, 'users', ['created_by'], ['id'])

    with op.batch_alter_table('project_managers', schema=None) as batch_op:
        batch_op.drop_constraint('project_managers_project_id_user_id_key', type_='unique')
        batch_op.drop_constraint('project_managers_user_id_fkey', type_='foreignkey')
        batch_op.drop_constraint('project_managers_project_id_fkey', type_='foreignkey')
        batch_op.create_foreign_key(None, 'projects', ['project_id'], ['id'])
        batch_op.create_foreign_key(None, 'users', ['user_id'], ['id'])

    with op.batch_alter_table('purchase_order_items', schema=None) as batch_op:
        batch_op.alter_column('item_name',
               existing_type=sa.VARCHAR(length=100),
               type_=sa.String(length=255),
               existing_nullable=False)
        batch_op.alter_column('unit',
               existing_type=sa.VARCHAR(length=20),
               nullable=True)
        batch_op.alter_column('request_item_id',
               existing_type=sa.INTEGER(),
               nullable=True)

    with op.batch_alter_table('purchase_orders', schema=None) as batch_op:
        batch_op.alter_column('purchase_request_id',
               existing_type=sa.INTEGER(),
               nullable=True)
        batch_op.alter_column('supplier_id',
               existing_type=sa.INTEGER(),
               nullable=True)
        batch_op.alter_column('delivery_date',
               existing_type=sa.DATE(),
               nullable=True)
        batch_op.alter_column('engineering_approval',
               existing_type=sa.VARCHAR(length=20),
               nullable=True)
        batch_op.alter_column('projects_approval',
               existing_type=sa.VARCHAR(length=20),
               nullable=True)
        batch_op.alter_column('executive_approval',
               existing_type=sa.VARCHAR(length=20),
               nullable=True)
        batch_op.alter_column('approval_status',
               existing_type=sa.VARCHAR(length=20),
               nullable=True)
        batch_op.drop_constraint('fk_purchase_orders_project', type_='foreignkey')

    with op.batch_alter_table('purchase_request_items', schema=None) as batch_op:
        batch_op.alter_column('item_name',
               existing_type=sa.VARCHAR(length=100),
               type_=sa.String(length=255),
               existing_nullable=False)
        batch_op.alter_column('unit',
               existing_type=sa.VARCHAR(length=20),
               nullable=True)

    with op.batch_alter_table('purchase_requests', schema=None) as batch_op:
        batch_op.alter_column('request_date',
               existing_type=sa.DATE(),
               nullable=True)
        batch_op.alter_column('project_name',
               existing_type=sa.VARCHAR(length=100),
               type_=sa.String(length=255),
               nullable=True)
        batch_op.alter_column('status',
               existing_type=sa.VARCHAR(length=20),
               nullable=True)

    with op.batch_alter_table('sequence_settings', schema=None) as batch_op:
        batch_op.alter_column('prefix',
               existing_type=sa.VARCHAR(length=20),
               type_=sa.String(length=10),
               existing_nullable=True)
        batch_op.drop_constraint('sequence_settings_updated_by_fkey', type_='foreignkey')
        batch_op.drop_column('entity_name')
        batch_op.drop_column('updated_by')

    with op.batch_alter_table('user_permissions', schema=None) as batch_op:
        batch_op.add_column(sa.Column('module_name', sa.String(length=50), nullable=False))
        batch_op.add_column(sa.Column('can_view', sa.Boolean(), nullable=True))
        batch_op.add_column(sa.Column('can_edit', sa.Boolean(), nullable=True))
        batch_op.add_column(sa.Column('created_at', sa.DateTime(), nullable=True))
        batch_op.add_column(sa.Column('created_by', sa.Integer(), nullable=True))
        batch_op.create_foreign_key(None, 'users', ['created_by'], ['id'])
        batch_op.drop_column('module')
        batch_op.drop_column('can_update')
        batch_op.drop_column('can_read')

    # ### end Alembic commands ###


def downgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    with op.batch_alter_table('user_permissions', schema=None) as batch_op:
        batch_op.add_column(sa.Column('can_read', sa.BOOLEAN(), autoincrement=False, nullable=True))
        batch_op.add_column(sa.Column('can_update', sa.BOOLEAN(), autoincrement=False, nullable=True))
        batch_op.add_column(sa.Column('module', sa.VARCHAR(length=50), autoincrement=False, nullable=False))
        batch_op.drop_constraint(None, type_='foreignkey')
        batch_op.drop_column('created_by')
        batch_op.drop_column('created_at')
        batch_op.drop_column('can_edit')
        batch_op.drop_column('can_view')
        batch_op.drop_column('module_name')

    with op.batch_alter_table('sequence_settings', schema=None) as batch_op:
        batch_op.add_column(sa.Column('updated_by', sa.INTEGER(), autoincrement=False, nullable=True))
        batch_op.add_column(sa.Column('entity_name', sa.VARCHAR(length=100), autoincrement=False, nullable=False))
        batch_op.create_foreign_key('sequence_settings_updated_by_fkey', 'users', ['updated_by'], ['id'])
        batch_op.alter_column('prefix',
               existing_type=sa.String(length=10),
               type_=sa.VARCHAR(length=20),
               existing_nullable=True)

    with op.batch_alter_table('purchase_requests', schema=None) as batch_op:
        batch_op.alter_column('status',
               existing_type=sa.VARCHAR(length=20),
               nullable=False)
        batch_op.alter_column('project_name',
               existing_type=sa.String(length=255),
               type_=sa.VARCHAR(length=100),
               nullable=False)
        batch_op.alter_column('request_date',
               existing_type=sa.DATE(),
               nullable=False)

    with op.batch_alter_table('purchase_request_items', schema=None) as batch_op:
        batch_op.alter_column('unit',
               existing_type=sa.VARCHAR(length=20),
               nullable=False)
        batch_op.alter_column('item_name',
               existing_type=sa.String(length=255),
               type_=sa.VARCHAR(length=100),
               existing_nullable=False)

    with op.batch_alter_table('purchase_orders', schema=None) as batch_op:
        batch_op.create_foreign_key('fk_purchase_orders_project', 'projects', ['project_id'], ['id'], ondelete='SET NULL')
        batch_op.alter_column('approval_status',
               existing_type=sa.VARCHAR(length=20),
               nullable=False)
        batch_op.alter_column('executive_approval',
               existing_type=sa.VARCHAR(length=20),
               nullable=False)
        batch_op.alter_column('projects_approval',
               existing_type=sa.VARCHAR(length=20),
               nullable=False)
        batch_op.alter_column('engineering_approval',
               existing_type=sa.VARCHAR(length=20),
               nullable=False)
        batch_op.alter_column('delivery_date',
               existing_type=sa.DATE(),
               nullable=False)
        batch_op.alter_column('supplier_id',
               existing_type=sa.INTEGER(),
               nullable=False)
        batch_op.alter_column('purchase_request_id',
               existing_type=sa.INTEGER(),
               nullable=False)

    with op.batch_alter_table('purchase_order_items', schema=None) as batch_op:
        batch_op.alter_column('request_item_id',
               existing_type=sa.INTEGER(),
               nullable=False)
        batch_op.alter_column('unit',
               existing_type=sa.VARCHAR(length=20),
               nullable=False)
        batch_op.alter_column('item_name',
               existing_type=sa.String(length=255),
               type_=sa.VARCHAR(length=100),
               existing_nullable=False)

    with op.batch_alter_table('project_managers', schema=None) as batch_op:
        batch_op.drop_constraint(None, type_='foreignkey')
        batch_op.drop_constraint(None, type_='foreignkey')
        batch_op.create_foreign_key('project_managers_project_id_fkey', 'projects', ['project_id'], ['id'], ondelete='CASCADE')
        batch_op.create_foreign_key('project_managers_user_id_fkey', 'users', ['user_id'], ['id'], ondelete='CASCADE')
        batch_op.create_unique_constraint('project_managers_project_id_user_id_key', ['project_id', 'user_id'])

    with op.batch_alter_table('price_quotes', schema=None) as batch_op:
        batch_op.drop_constraint(None, type_='foreignkey')
        batch_op.alter_column('total_price',
               existing_type=sa.DOUBLE_PRECISION(precision=53),
               nullable=True)
        batch_op.drop_column('created_by')
        batch_op.drop_column('notes')
        batch_op.drop_column('status')
        batch_op.drop_column('currency')

    with op.batch_alter_table('price_quote_items', schema=None) as batch_op:
        batch_op.add_column(sa.Column('created_at', postgresql.TIMESTAMP(), autoincrement=False, nullable=True))
        batch_op.add_column(sa.Column('price_quote_id', sa.INTEGER(), autoincrement=False, nullable=False))
        batch_op.add_column(sa.Column('price', sa.DOUBLE_PRECISION(precision=53), autoincrement=False, nullable=False))
        batch_op.drop_constraint(None, type_='foreignkey')
        batch_op.create_foreign_key('price_quote_items_price_quote_id_fkey', 'price_quotes', ['price_quote_id'], ['id'])
        batch_op.alter_column('request_item_id',
               existing_type=sa.INTEGER(),
               nullable=False)
        batch_op.drop_column('total_price')
        batch_op.drop_column('unit_price')
        batch_op.drop_column('unit')
        batch_op.drop_column('quantity')
        batch_op.drop_column('description')
        batch_op.drop_column('name')
        batch_op.drop_column('quote_id')

    with op.batch_alter_table('other_transactions', schema=None) as batch_op:
        batch_op.create_foreign_key('fk_other_transactions_project', 'projects', ['project_id'], ['id'], ondelete='SET NULL')
        batch_op.alter_column('approval_status',
               existing_type=sa.VARCHAR(length=20),
               nullable=False)
        batch_op.alter_column('description',
               existing_type=sa.TEXT(),
               nullable=True)
        batch_op.alter_column('transaction_type',
               existing_type=sa.String(length=50),
               type_=sa.VARCHAR(length=100),
               existing_nullable=False)

    with op.batch_alter_table('notifications', schema=None) as batch_op:
        batch_op.alter_column('url',
               existing_type=sa.String(length=255),
               type_=sa.VARCHAR(length=200),
               existing_nullable=True)
        batch_op.alter_column('category',
               existing_type=sa.VARCHAR(length=50),
               nullable=False)

    with op.batch_alter_table('invoices', schema=None) as batch_op:
        batch_op.create_foreign_key('fk_invoices_project', 'projects', ['project_id'], ['id'], ondelete='SET NULL')
        batch_op.alter_column('approval_status',
               existing_type=sa.VARCHAR(length=20),
               nullable=False)
        batch_op.alter_column('invoice_amount',
               existing_type=sa.DOUBLE_PRECISION(precision=53),
               nullable=False)
        batch_op.alter_column('project_name',
               existing_type=sa.String(length=255),
               type_=sa.VARCHAR(length=100),
               nullable=False)
        batch_op.alter_column('invoice_date',
               existing_type=sa.DATE(),
               nullable=False)

    with op.batch_alter_table('approval_logs', schema=None) as batch_op:
        batch_op.alter_column('approval_date',
               existing_type=postgresql.TIMESTAMP(),
               nullable=False)

    op.create_table('warehouses',
    sa.Column('id', sa.INTEGER(), server_default=sa.text("nextval('warehouses_id_seq'::regclass)"), autoincrement=True, nullable=False),
    sa.Column('warehouse_number', sa.VARCHAR(length=50), autoincrement=False, nullable=False),
    sa.Column('warehouse_name', sa.VARCHAR(length=100), autoincrement=False, nullable=False),
    sa.Column('location', sa.VARCHAR(length=200), autoincrement=False, nullable=True),
    sa.Column('created_at', postgresql.TIMESTAMP(), autoincrement=False, nullable=True),
    sa.PrimaryKeyConstraint('id', name='warehouses_pkey'),
    sa.UniqueConstraint('warehouse_number', name='warehouses_warehouse_number_key'),
    postgresql_ignore_search_path=False
    )
    op.create_table('inventory_items',
    sa.Column('id', sa.INTEGER(), server_default=sa.text("nextval('inventory_items_id_seq'::regclass)"), autoincrement=True, nullable=False),
    sa.Column('item_number', sa.VARCHAR(length=50), autoincrement=False, nullable=False),
    sa.Column('item_name', sa.VARCHAR(length=100), autoincrement=False, nullable=False),
    sa.Column('available_quantity', sa.DOUBLE_PRECISION(precision=53), autoincrement=False, nullable=False),
    sa.Column('required_quantity', sa.DOUBLE_PRECISION(precision=53), autoincrement=False, nullable=True),
    sa.Column('warehouse_id', sa.INTEGER(), autoincrement=False, nullable=False),
    sa.Column('created_at', postgresql.TIMESTAMP(), autoincrement=False, nullable=True),
    sa.ForeignKeyConstraint(['warehouse_id'], ['warehouses.id'], name='inventory_items_warehouse_id_fkey'),
    sa.PrimaryKeyConstraint('id', name='inventory_items_pkey'),
    sa.UniqueConstraint('item_number', name='inventory_items_item_number_key'),
    postgresql_ignore_search_path=False
    )
    op.create_table('inventory_movements',
    sa.Column('id', sa.INTEGER(), autoincrement=True, nullable=False),
    sa.Column('inventory_item_id', sa.INTEGER(), autoincrement=False, nullable=False),
    sa.Column('quantity', sa.DOUBLE_PRECISION(precision=53), autoincrement=False, nullable=False),
    sa.Column('movement_type', sa.VARCHAR(length=20), autoincrement=False, nullable=False),
    sa.Column('movement_date', sa.DATE(), autoincrement=False, nullable=False),
    sa.Column('reference', sa.VARCHAR(length=100), autoincrement=False, nullable=True),
    sa.Column('created_by', sa.INTEGER(), autoincrement=False, nullable=False),
    sa.Column('created_at', postgresql.TIMESTAMP(), autoincrement=False, nullable=True),
    sa.ForeignKeyConstraint(['created_by'], ['users.id'], name='inventory_movements_created_by_fkey'),
    sa.ForeignKeyConstraint(['inventory_item_id'], ['inventory_items.id'], name='inventory_movements_inventory_item_id_fkey'),
    sa.PrimaryKeyConstraint('id', name='inventory_movements_pkey')
    )
    op.create_table('inventories',
    sa.Column('id', sa.INTEGER(), autoincrement=True, nullable=False),
    sa.Column('inventory_number', sa.VARCHAR(length=50), autoincrement=False, nullable=False),
    sa.Column('inventory_date', sa.DATE(), autoincrement=False, nullable=False),
    sa.Column('inventory_item_id', sa.INTEGER(), autoincrement=False, nullable=False),
    sa.Column('actual_quantity', sa.DOUBLE_PRECISION(precision=53), autoincrement=False, nullable=False),
    sa.Column('recorded_quantity', sa.DOUBLE_PRECISION(precision=53), autoincrement=False, nullable=False),
    sa.Column('created_by', sa.INTEGER(), autoincrement=False, nullable=False),
    sa.Column('created_at', postgresql.TIMESTAMP(), autoincrement=False, nullable=True),
    sa.ForeignKeyConstraint(['created_by'], ['users.id'], name='inventories_created_by_fkey'),
    sa.ForeignKeyConstraint(['inventory_item_id'], ['inventory_items.id'], name='inventories_inventory_item_id_fkey'),
    sa.PrimaryKeyConstraint('id', name='inventories_pkey'),
    sa.UniqueConstraint('inventory_number', name='inventories_inventory_number_key')
    )
    # ### end Alembic commands ###
